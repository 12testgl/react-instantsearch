// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createConnector widget calls onSearchParameters when mounted if getSearchParameters are defined 1`] = `
Connector {
  "__reactInternalMemoizedMaskedChildContext": Object {
    "ais": Object {
      "onSearchParameters": [MockFunction] {
        "calls": Array [
          Array [
            [MockFunction],
            [Circular],
            Object {
              "hello": "there",
            },
            [Circular],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": null,
          },
        ],
      },
      "store": Object {
        "getState": [Function],
        "subscribe": [Function],
      },
      "widgetsManager": Object {
        "registerWidget": [MockFunction] {
          "calls": Array [
            Array [
              [Circular],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
    },
    "multiIndexContext": undefined,
  },
  "__reactInternalMemoizedUnmaskedChildContext": Object {
    "ais": Object {
      "onSearchParameters": [MockFunction] {
        "calls": Array [
          Array [
            [MockFunction],
            Object {
              "ais": [Circular],
              "multiIndexContext": undefined,
            },
            Object {
              "hello": "there",
            },
            [Circular],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": null,
          },
        ],
      },
      "store": Object {
        "getState": [Function],
        "subscribe": [Function],
      },
      "widgetsManager": Object {
        "registerWidget": [MockFunction] {
          "calls": Array [
            Array [
              [Circular],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
    },
  },
  "_reactInternalFiber": FiberNode {
    "_debugID": 69,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": FiberNode {
      "_debugID": 68,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": 0,
      "alternate": FiberNode {
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": [Circular],
        "child": FiberNode {
          "_debugID": 69,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": [Circular],
          "child": null,
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "hello": "there",
          },
          "memoizedState": Object {
            "canRender": true,
            "props": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "hello": "there",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "canRender": true,
              "props": null,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "effectTag": 0,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "memoizedState": Object {
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "mount": true,
          "props": Object {
            "hello": "there",
          },
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 66,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 1,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "child": [Circular],
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div />,
            "context": Object {},
            "current": [Circular],
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "remainingExpirationTime": 0,
          },
          "tag": 3,
          "treeBaseTime": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": WrapperComponent {
          "__reactInternalMemoizedMergedChildContext": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "refs": Object {},
          "state": Object {
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "mount": true,
            "props": Object {
              "hello": "there",
            },
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "child": [Circular],
      "effectTag": 1,
      "expirationTime": 1,
      "firstEffect": [Circular],
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": Object {
        "Component": [Function],
        "context": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "props": Object {
          "hello": "there",
        },
      },
      "memoizedState": Object {
        "context": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "mount": true,
        "props": Object {
          "hello": "there",
        },
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "Component": [Function],
        "context": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "props": Object {
          "hello": "there",
        },
      },
      "ref": null,
      "return": FiberNode {
        "_debugID": 66,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": FiberNode {
          "_debugID": 66,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": [Circular],
          "child": FiberNode {
            "_debugID": 68,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": FiberNode {
              "_debugID": 69,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "hello": "there",
              },
              "memoizedState": Object {
                "canRender": true,
                "props": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "hello": "there",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "canRender": true,
                  "props": null,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "memoizedState": Object {
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "mount": true,
              "props": Object {
                "hello": "there",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "__reactInternalMemoizedMergedChildContext": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div />,
            "context": Object {},
            "current": [Circular],
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "remainingExpirationTime": 0,
          },
          "tag": 3,
          "treeBaseTime": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "child": [Circular],
        "effectTag": 32,
        "expirationTime": 1,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={
              Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              }
            }
            props={
              Object {
                "hello": "there",
              }
            }
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div />,
          "context": Object {},
          "current": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": FiberNode {
              "_debugID": 68,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": FiberNode {
                "_debugID": 69,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "hello": "there",
                },
                "memoizedState": Object {
                  "canRender": true,
                  "props": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "hello": "there",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "canRender": true,
                    "props": null,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "memoizedState": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "hello": "there",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "remainingExpirationTime": 0,
        },
        "tag": 3,
        "treeBaseTime": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "expirationTime": 0,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "selfBaseTime": 0,
      "sibling": null,
      "stateNode": WrapperComponent {
        "__reactInternalMemoizedMergedChildContext": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "refs": Object {},
        "state": Object {
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "mount": true,
          "props": Object {
            "hello": "there",
          },
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 2,
      "treeBaseTime": 0,
      "type": [Function],
      "updateQueue": null,
    },
    "_debugSource": null,
    "actualDuration": 0,
    "actualStartTime": 0,
    "alternate": FiberNode {
      "_debugID": 69,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": FiberNode {
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": FiberNode {
          "_debugID": 68,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": [Circular],
          "child": [Circular],
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "memoizedState": Object {
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "mount": true,
            "props": Object {
              "hello": "there",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 66,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 1,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "ais": Object {
                          "onSearchParameters": [MockFunction] {
                            "calls": Array [
                              Array [
                                [MockFunction],
                                Object {
                                  "ais": [Circular],
                                  "multiIndexContext": undefined,
                                },
                                Object {
                                  "hello": "there",
                                },
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": null,
                              },
                            ],
                          },
                          "store": Object {
                            "getState": [Function],
                            "subscribe": [Function],
                          },
                          "widgetsManager": Object {
                            "registerWidget": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                      }
                    }
                    props={
                      Object {
                        "hello": "there",
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "__reactInternalMemoizedMergedChildContext": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "mount": true,
              "props": Object {
                "hello": "there",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "child": [Circular],
        "effectTag": 1,
        "expirationTime": 1,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "memoizedState": Object {
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "mount": true,
          "props": Object {
            "hello": "there",
          },
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 66,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": FiberNode {
              "_debugID": 68,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "memoizedState": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "hello": "there",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "child": [Circular],
          "effectTag": 32,
          "expirationTime": 1,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": null,
          "memoizedState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div />,
            "context": Object {},
            "current": FiberNode {
              "_debugID": 66,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": FiberNode {
                "_debugID": 68,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "memoizedState": Object {
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "hello": "there",
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    },
                    "props": Object {
                      "hello": "there",
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "hello": "there",
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": [Circular],
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "ais": Object {
                          "onSearchParameters": [MockFunction] {
                            "calls": Array [
                              Array [
                                [MockFunction],
                                Object {
                                  "ais": [Circular],
                                  "multiIndexContext": undefined,
                                },
                                Object {
                                  "hello": "there",
                                },
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": null,
                              },
                            ],
                          },
                          "store": Object {
                            "getState": [Function],
                            "subscribe": [Function],
                          },
                          "widgetsManager": Object {
                            "registerWidget": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                      }
                    }
                    props={
                      Object {
                        "hello": "there",
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "remainingExpirationTime": 0,
          },
          "tag": 3,
          "treeBaseTime": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": WrapperComponent {
          "__reactInternalMemoizedMergedChildContext": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "refs": Object {},
          "state": Object {
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "mount": true,
            "props": Object {
              "hello": "there",
            },
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": 0,
      "alternate": [Circular],
      "child": null,
      "effectTag": 0,
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "hello": "there",
      },
      "memoizedState": Object {
        "canRender": true,
        "props": null,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "hello": "there",
      },
      "ref": null,
      "return": FiberNode {
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": FiberNode {
          "_debugID": 68,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": [Circular],
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 1,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "memoizedState": Object {
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "mount": true,
            "props": Object {
              "hello": "there",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 66,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "ais": Object {
                          "onSearchParameters": [MockFunction] {
                            "calls": Array [
                              Array [
                                [MockFunction],
                                Object {
                                  "ais": [Circular],
                                  "multiIndexContext": undefined,
                                },
                                Object {
                                  "hello": "there",
                                },
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": null,
                              },
                            ],
                          },
                          "store": Object {
                            "getState": [Function],
                            "subscribe": [Function],
                          },
                          "widgetsManager": Object {
                            "registerWidget": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                      }
                    }
                    props={
                      Object {
                        "hello": "there",
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 1,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": FiberNode {
                "_debugID": 66,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "ais": Object {
                          "onSearchParameters": [MockFunction] {
                            "calls": Array [
                              Array [
                                [MockFunction],
                                Object {
                                  "ais": [Circular],
                                  "multiIndexContext": undefined,
                                },
                                Object {
                                  "hello": "there",
                                },
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": null,
                              },
                            ],
                          },
                          "store": Object {
                            "getState": [Function],
                            "subscribe": [Function],
                          },
                          "widgetsManager": Object {
                            "registerWidget": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                      }
                    }
                    props={
                      Object {
                        "hello": "there",
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": [Circular],
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "ais": Object {
                            "onSearchParameters": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                  Object {
                                    "ais": [Circular],
                                    "multiIndexContext": undefined,
                                  },
                                  Object {
                                    "hello": "there",
                                  },
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": null,
                                },
                              ],
                            },
                            "store": Object {
                              "getState": [Function],
                              "subscribe": [Function],
                            },
                            "widgetsManager": Object {
                              "registerWidget": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    [Circular],
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                          },
                        }
                      }
                      props={
                        Object {
                          "hello": "there",
                        }
                      }
                    />,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "__reactInternalMemoizedMergedChildContext": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "mount": true,
              "props": Object {
                "hello": "there",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "child": [Circular],
        "effectTag": 0,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "memoizedState": Object {
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "mount": true,
          "props": Object {
            "hello": "there",
          },
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 66,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": FiberNode {
              "_debugID": 68,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 1,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "memoizedState": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "hello": "there",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 32,
            "expirationTime": 1,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 68,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 1,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "memoizedState": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "hello": "there",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "child": [Circular],
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div />,
            "context": Object {},
            "current": [Circular],
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "remainingExpirationTime": 0,
          },
          "tag": 3,
          "treeBaseTime": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": WrapperComponent {
          "__reactInternalMemoizedMergedChildContext": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "_reactInternalFiber": FiberNode {
            "_debugID": 68,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 1,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "memoizedState": Object {
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "mount": true,
              "props": Object {
                "hello": "there",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 66,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 66,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "ais": Object {
                          "onSearchParameters": [MockFunction] {
                            "calls": Array [
                              Array [
                                [MockFunction],
                                Object {
                                  "ais": [Circular],
                                  "multiIndexContext": undefined,
                                },
                                Object {
                                  "hello": "there",
                                },
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": null,
                              },
                            ],
                          },
                          "store": Object {
                            "getState": [Function],
                            "subscribe": [Function],
                          },
                          "widgetsManager": Object {
                            "registerWidget": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                      }
                    }
                    props={
                      Object {
                        "hello": "there",
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "ais": Object {
                            "onSearchParameters": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                  Object {
                                    "ais": [Circular],
                                    "multiIndexContext": undefined,
                                  },
                                  Object {
                                    "hello": "there",
                                  },
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": null,
                                },
                              ],
                            },
                            "store": Object {
                              "getState": [Function],
                              "subscribe": [Function],
                            },
                            "widgetsManager": Object {
                              "registerWidget": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    [Circular],
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                          },
                        }
                      }
                      props={
                        Object {
                          "hello": "there",
                        }
                      }
                    />,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 1,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": FiberNode {
                  "_debugID": 66,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": [Circular],
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "ais": Object {
                            "onSearchParameters": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                  Object {
                                    "ais": [Circular],
                                    "multiIndexContext": undefined,
                                  },
                                  Object {
                                    "hello": "there",
                                  },
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": null,
                                },
                              ],
                            },
                            "store": Object {
                              "getState": [Function],
                              "subscribe": [Function],
                            },
                            "widgetsManager": Object {
                              "registerWidget": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    [Circular],
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                          },
                        }
                      }
                      props={
                        Object {
                          "hello": "there",
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "ais": Object {
                              "onSearchParameters": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    [MockFunction],
                                    Object {
                                      "ais": [Circular],
                                      "multiIndexContext": undefined,
                                    },
                                    Object {
                                      "hello": "there",
                                    },
                                    [Circular],
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": null,
                                  },
                                ],
                              },
                              "store": Object {
                                "getState": [Function],
                                "subscribe": [Function],
                              },
                              "widgetsManager": Object {
                                "registerWidget": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [Circular],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": undefined,
                                    },
                                  ],
                                },
                              },
                            },
                          }
                        }
                        props={
                          Object {
                            "hello": "there",
                          }
                        }
                      />,
                    },
                    "expirationTime": 0,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "ais": Object {
                          "onSearchParameters": [MockFunction] {
                            "calls": Array [
                              Array [
                                [MockFunction],
                                Object {
                                  "ais": [Circular],
                                  "multiIndexContext": undefined,
                                },
                                Object {
                                  "hello": "there",
                                },
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": null,
                              },
                            ],
                          },
                          "store": Object {
                            "getState": [Function],
                            "subscribe": [Function],
                          },
                          "widgetsManager": Object {
                            "registerWidget": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Circular],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                      }
                    }
                    props={
                      Object {
                        "hello": "there",
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "refs": Object {},
          "state": Object {
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "mount": true,
            "props": Object {
              "hello": "there",
            },
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "selfBaseTime": 0,
      "sibling": null,
      "stateNode": [Circular],
      "tag": 2,
      "treeBaseTime": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseState": Object {
          "canRender": true,
          "props": null,
        },
        "expirationTime": 0,
        "firstCapturedEffect": null,
        "firstCapturedUpdate": null,
        "firstEffect": null,
        "firstUpdate": null,
        "lastCapturedEffect": null,
        "lastCapturedUpdate": null,
        "lastEffect": null,
        "lastUpdate": null,
      },
    },
    "child": null,
    "effectTag": 5,
    "expirationTime": 1,
    "firstEffect": null,
    "index": 0,
    "key": null,
    "lastEffect": null,
    "memoizedProps": Object {
      "hello": "there",
    },
    "memoizedState": Object {
      "canRender": false,
      "props": null,
    },
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "hello": "there",
    },
    "ref": null,
    "return": FiberNode {
      "_debugID": 68,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": 0,
      "alternate": FiberNode {
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": [Circular],
        "child": FiberNode {
          "_debugID": 69,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": [Circular],
          "child": null,
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "hello": "there",
          },
          "memoizedState": Object {
            "canRender": true,
            "props": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "hello": "there",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "canRender": true,
              "props": null,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "effectTag": 0,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "memoizedState": Object {
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "mount": true,
          "props": Object {
            "hello": "there",
          },
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 66,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 1,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "child": [Circular],
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div />,
            "context": Object {},
            "current": [Circular],
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "remainingExpirationTime": 0,
          },
          "tag": 3,
          "treeBaseTime": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": WrapperComponent {
          "__reactInternalMemoizedMergedChildContext": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "Component": [Function],
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "props": Object {
              "hello": "there",
            },
          },
          "refs": Object {},
          "state": Object {
            "context": Object {
              "ais": Object {
                "onSearchParameters": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                      Object {
                        "ais": [Circular],
                        "multiIndexContext": undefined,
                      },
                      Object {
                        "hello": "there",
                      },
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": null,
                    },
                  ],
                },
                "store": Object {
                  "getState": [Function],
                  "subscribe": [Function],
                },
                "widgetsManager": Object {
                  "registerWidget": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
            },
            "mount": true,
            "props": Object {
              "hello": "there",
            },
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "child": [Circular],
      "effectTag": 1,
      "expirationTime": 1,
      "firstEffect": [Circular],
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": Object {
        "Component": [Function],
        "context": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "props": Object {
          "hello": "there",
        },
      },
      "memoizedState": Object {
        "context": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "mount": true,
        "props": Object {
          "hello": "there",
        },
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "Component": [Function],
        "context": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "props": Object {
          "hello": "there",
        },
      },
      "ref": null,
      "return": FiberNode {
        "_debugID": 66,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": FiberNode {
          "_debugID": 66,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": [Circular],
          "child": FiberNode {
            "_debugID": 68,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": FiberNode {
              "_debugID": 69,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "hello": "there",
              },
              "memoizedState": Object {
                "canRender": true,
                "props": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "hello": "there",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "canRender": true,
                  "props": null,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "memoizedState": Object {
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "mount": true,
              "props": Object {
                "hello": "there",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "props": Object {
                "hello": "there",
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "__reactInternalMemoizedMergedChildContext": Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div />,
            "context": Object {},
            "current": [Circular],
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "remainingExpirationTime": 0,
          },
          "tag": 3,
          "treeBaseTime": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "child": [Circular],
        "effectTag": 32,
        "expirationTime": 1,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={
              Object {
                "ais": Object {
                  "onSearchParameters": [MockFunction] {
                    "calls": Array [
                      Array [
                        [MockFunction],
                        Object {
                          "ais": [Circular],
                          "multiIndexContext": undefined,
                        },
                        Object {
                          "hello": "there",
                        },
                        [Circular],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": null,
                      },
                    ],
                  },
                  "store": Object {
                    "getState": [Function],
                    "subscribe": [Function],
                  },
                  "widgetsManager": Object {
                    "registerWidget": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
              }
            }
            props={
              Object {
                "hello": "there",
              }
            }
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div />,
          "context": Object {},
          "current": FiberNode {
            "_debugID": 66,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": [Circular],
            "child": FiberNode {
              "_debugID": 68,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": FiberNode {
                "_debugID": 69,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "hello": "there",
                },
                "memoizedState": Object {
                  "canRender": true,
                  "props": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "hello": "there",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "canRender": true,
                    "props": null,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "memoizedState": Object {
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "mount": true,
                "props": Object {
                  "hello": "there",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "props": Object {
                  "hello": "there",
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "props": Object {
                    "hello": "there",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "hello": "there",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "ais": Object {
                      "onSearchParameters": [MockFunction] {
                        "calls": Array [
                          Array [
                            [MockFunction],
                            Object {
                              "ais": [Circular],
                              "multiIndexContext": undefined,
                            },
                            Object {
                              "hello": "there",
                            },
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": null,
                          },
                        ],
                      },
                      "store": Object {
                        "getState": [Function],
                        "subscribe": [Function],
                      },
                      "widgetsManager": Object {
                        "registerWidget": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                      },
                    },
                  }
                }
                props={
                  Object {
                    "hello": "there",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "ais": Object {
                        "onSearchParameters": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                              Object {
                                "ais": [Circular],
                                "multiIndexContext": undefined,
                              },
                              Object {
                                "hello": "there",
                              },
                              [Circular],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": null,
                            },
                          ],
                        },
                        "store": Object {
                          "getState": [Function],
                          "subscribe": [Function],
                        },
                        "widgetsManager": Object {
                          "registerWidget": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Circular],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "hello": "there",
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "remainingExpirationTime": 0,
        },
        "tag": 3,
        "treeBaseTime": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "ais": Object {
                    "onSearchParameters": [MockFunction] {
                      "calls": Array [
                        Array [
                          [MockFunction],
                          Object {
                            "ais": [Circular],
                            "multiIndexContext": undefined,
                          },
                          Object {
                            "hello": "there",
                          },
                          [Circular],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": null,
                        },
                      ],
                    },
                    "store": Object {
                      "getState": [Function],
                      "subscribe": [Function],
                    },
                    "widgetsManager": Object {
                      "registerWidget": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Circular],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                }
              }
              props={
                Object {
                  "hello": "there",
                }
              }
            />,
          },
          "expirationTime": 0,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "selfBaseTime": 0,
      "sibling": null,
      "stateNode": WrapperComponent {
        "__reactInternalMemoizedMergedChildContext": Object {
          "ais": Object {
            "onSearchParameters": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                  Object {
                    "ais": [Circular],
                    "multiIndexContext": undefined,
                  },
                  Object {
                    "hello": "there",
                  },
                  [Circular],
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": null,
                },
              ],
            },
            "store": Object {
              "getState": [Function],
              "subscribe": [Function],
            },
            "widgetsManager": Object {
              "registerWidget": [MockFunction] {
                "calls": Array [
                  Array [
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
          },
        },
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "Component": [Function],
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "props": Object {
            "hello": "there",
          },
        },
        "refs": Object {},
        "state": Object {
          "context": Object {
            "ais": Object {
              "onSearchParameters": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                    Object {
                      "ais": [Circular],
                      "multiIndexContext": undefined,
                    },
                    Object {
                      "hello": "there",
                    },
                    [Circular],
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": null,
                  },
                ],
              },
              "store": Object {
                "getState": [Function],
                "subscribe": [Function],
              },
              "widgetsManager": Object {
                "registerWidget": [MockFunction] {
                  "calls": Array [
                    Array [
                      [Circular],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                },
              },
            },
          },
          "mount": true,
          "props": Object {
            "hello": "there",
          },
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 2,
      "treeBaseTime": 0,
      "type": [Function],
      "updateQueue": null,
    },
    "selfBaseTime": 0,
    "sibling": null,
    "stateNode": [Circular],
    "tag": 2,
    "treeBaseTime": 0,
    "type": [Function],
    "updateQueue": Object {
      "baseState": Object {
        "canRender": false,
        "props": null,
      },
      "expirationTime": 1,
      "firstCapturedEffect": null,
      "firstCapturedUpdate": null,
      "firstEffect": null,
      "firstUpdate": Object {
        "callback": null,
        "expirationTime": 1,
        "next": null,
        "nextEffect": null,
        "payload": Object {
          "canRender": true,
        },
        "tag": 0,
      },
      "lastCapturedEffect": null,
      "lastCapturedUpdate": null,
      "lastEffect": null,
      "lastUpdate": Object {
        "callback": null,
        "expirationTime": 1,
        "next": null,
        "nextEffect": null,
        "payload": Object {
          "canRender": true,
        },
        "tag": 0,
      },
    },
  },
  "_reactInternalInstance": Object {},
  "cleanUp": [Function],
  "context": Object {
    "ais": Object {
      "onSearchParameters": [MockFunction] {
        "calls": Array [
          Array [
            [MockFunction],
            [Circular],
            Object {
              "hello": "there",
            },
            [Circular],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": null,
          },
        ],
      },
      "store": Object {
        "getState": [Function],
        "subscribe": [Function],
      },
      "widgetsManager": Object {
        "registerWidget": [MockFunction] {
          "calls": Array [
            Array [
              [Circular],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
    },
    "multiIndexContext": undefined,
  },
  "createURL": [Function],
  "getProvidedProps": [Function],
  "props": Object {
    "hello": "there",
  },
  "refine": [Function],
  "refs": Object {},
  "searchForFacetValues": [Function],
  "state": Object {
    "canRender": true,
    "props": null,
  },
  "unregisterWidget": undefined,
  "unsubscribe": null,
  "updater": Object {
    "enqueueForceUpdate": [Function],
    "enqueueReplaceState": [Function],
    "enqueueSetState": [Function],
    "isMounted": [Function],
  },
}
`;
